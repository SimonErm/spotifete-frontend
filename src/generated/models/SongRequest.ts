/* tslint:disable */
/* eslint-disable */
/**
 * Spotifete Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SongRequestStatus,
    SongRequestStatusFromJSON,
    SongRequestStatusFromJSONTyped,
    SongRequestStatusToJSON,
    TrackMetaData,
    TrackMetaDataFromJSON,
    TrackMetaDataFromJSONTyped,
    TrackMetaDataToJSON,
} from './';

/**
 * 
 * @export
 * @interface SongRequest
 */
export interface SongRequest {
    /**
     * 
     * @type {number}
     * @memberof SongRequest
     */
    sessionId?: number;
    /**
     * 
     * @type {number}
     * @memberof SongRequest
     */
    userId?: number;
    /**
     * 
     * @type {string}
     * @memberof SongRequest
     */
    spotifyTrackId?: string;
    /**
     * 
     * @type {TrackMetaData}
     * @memberof SongRequest
     */
    trackMetadata?: TrackMetaData;
    /**
     * 
     * @type {SongRequestStatus}
     * @memberof SongRequest
     */
    status?: SongRequestStatus;
}

export function SongRequestFromJSON(json: any): SongRequest {
    return SongRequestFromJSONTyped(json, false);
}

export function SongRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SongRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sessionId': !exists(json, 'session_id') ? undefined : json['session_id'],
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'spotifyTrackId': !exists(json, 'spotify_track_id') ? undefined : json['spotify_track_id'],
        'trackMetadata': !exists(json, 'track_metadata') ? undefined : TrackMetaDataFromJSON(json['track_metadata']),
        'status': !exists(json, 'status') ? undefined : SongRequestStatusFromJSON(json['status']),
    };
}

export function SongRequestToJSON(value?: SongRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'session_id': value.sessionId,
        'user_id': value.userId,
        'spotify_track_id': value.spotifyTrackId,
        'track_metadata': TrackMetaDataToJSON(value.trackMetadata),
        'status': SongRequestStatusToJSON(value.status),
    };
}


